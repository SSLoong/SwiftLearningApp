// Day1LearningView.swift
// Day 1 Swift Âü∫Á°ÄËØ≠Ê≥ïÂ≠¶‰π†ÁïåÈù¢

import SwiftUI

struct Day1LearningView: View {
    @Environment(\.presentationMode) var presentationMode
    @State private var currentSection = 0
    
    let sections = [
        "ÂèòÈáèÂíåÂ∏∏Èáè",
        "Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûã", 
        "Á±ªÂûãËΩ¨Êç¢",
        "Â≠óÁ¨¶‰∏≤ÊèíÂÄº",
        "ÂÆûË∑µÁªÉ‰π†"
    ]
    
    var body: some View {
        NavigationView {
            VStack(spacing: 0) {
                // È°∂ÈÉ®ËøõÂ∫¶Êù°
                ProgressView(value: Double(currentSection + 1), total: Double(sections.count))
                    .progressViewStyle(LinearProgressViewStyle(tint: .blue))
                    .scaleEffect(x: 1, y: 2)
                
                // ÂΩìÂâçÁ´†ËäÇÊ†áÈ¢ò
                Text(sections[currentSection])
                    .font(.title2)
                    .fontWeight(.bold)
                    .padding()
                    .foregroundColor(.blue)
                
                // Â≠¶‰π†ÂÜÖÂÆπ
                ScrollView {
                    VStack(spacing: 20) {
                        switch currentSection {
                        case 0:
                            VariablesAndConstantsSection()
                        case 1:
                            BasicTypesSection()
                        case 2:
                            TypeConversionSection()
                        case 3:
                            StringInterpolationSection()
                        case 4:
                            PracticeSection()
                        default:
                            Text("ÂÜÖÂÆπÂä†ËΩΩ‰∏≠...")
                        }
                    }
                    .padding()
                }
                
                // Â∫ïÈÉ®ÂØºËà™ÊåâÈíÆ
                HStack {
                    Button("‰∏ä‰∏ÄËäÇ") {
                        if currentSection > 0 {
                            withAnimation(.easeInOut) {
                                currentSection -= 1
                            }
                        }
                    }
                    .disabled(currentSection == 0)
                    
                    Spacer()
                    
                    Text("\(currentSection + 1) / \(sections.count)")
                        .font(.caption)
                        .foregroundColor(.secondary)
                    
                    Spacer()
                    
                    Button(currentSection == sections.count - 1 ? "ÂÆåÊàê" : "‰∏ã‰∏ÄËäÇ") {
                        if currentSection < sections.count - 1 {
                            withAnimation(.easeInOut) {
                                currentSection += 1
                            }
                        } else {
                            presentationMode.wrappedValue.dismiss()
                        }
                    }
                }
                .padding()
                .background(Color(UIColor.systemBackground))
                .shadow(color: .black.opacity(0.1), radius: 5, x: 0, y: -2)
            }
            .navigationTitle("Day 1: Swift Âü∫Á°Ä")
            .navigationBarTitleDisplayMode(.inline)
            .toolbar {
                ToolbarItem(placement: .navigationBarTrailing) {
                    Button("ÂÖ≥Èó≠") {
                        presentationMode.wrappedValue.dismiss()
                    }
                }
            }
        }
    }
}

// MARK: - ÂèòÈáèÂíåÂ∏∏ÈáèÁ´†ËäÇ
struct VariablesAndConstantsSection: View {
    var body: some View {
        VStack(alignment: .leading, spacing: 16) {
            // Ê¶ÇÂøµ‰ªãÁªç
            ConceptCard(
                title: "üî¢ ÂèòÈáè vs Â∏∏Èáè",
                content: """
                Swift ‰∏≠Êúâ‰∏§ÁßçÂ≠òÂÇ®ÂÄºÁöÑÊñπÂºèÔºö
                
                ‚Ä¢ let - Â£∞ÊòéÂ∏∏ÈáèÔºà‰∏çÂèØÂèòÔºâ
                ‚Ä¢ var - Â£∞ÊòéÂèòÈáèÔºàÂèØÂèòÔºâ
                
                ‰ºòÂÖà‰ΩøÁî® letÔºåËøôÊòØSwiftÁöÑÊúÄ‰Ω≥ÂÆûË∑µÔºÅ
                """
            )
            
            // ‰ª£Á†ÅÁ§∫‰æã
            CodeExampleCard(
                title: "‰ª£Á†ÅÁ§∫‰æã",
                code: """
                // Â∏∏Èáè - ÂÄº‰∏çËÉΩ‰øÆÊîπ
                let appName = "SwiftÂ≠¶‰π†Â∫îÁî®"
                let version = 1.0
                
                // ÂèòÈáè - ÂÄºÂèØ‰ª•‰øÆÊîπ
                var currentLesson = 1
                var isLearning = true
                
                // ‰øÆÊîπÂèòÈáè
                currentLesson = 2
                isLearning = false
                """
            )
            
            // ÈáçË¶ÅÊèêÁ§∫
            TipCard(
                title: "üí° ÈáçË¶ÅÊèêÁ§∫",
                content: "Â∏∏Èáè‰∏ÄÊó¶ËµãÂÄºÂ∞±‰∏çËÉΩ‰øÆÊîπÔºåËøôËÆ©‰ª£Á†ÅÊõ¥ÂÆâÂÖ®„ÄÅÊÄßËÉΩÊõ¥Â•Ω„ÄÇÂè™ÊúâÁ°ÆÂÆûÈúÄË¶Å‰øÆÊîπÂÄºÊó∂Êâç‰ΩøÁî® var„ÄÇ"
            )
        }
    }
}

// MARK: - Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÁ´†ËäÇ
struct BasicTypesSection: View {
    var body: some View {
        VStack(alignment: .leading, spacing: 16) {
            ConceptCard(
                title: "üìä Swift Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûã",
                content: """
                Swift ÊòØÁ±ªÂûãÂÆâÂÖ®ÁöÑËØ≠Ë®ÄÔºå‰∏ªË¶ÅÊï∞ÊçÆÁ±ªÂûãÔºö
                
                ‚Ä¢ Int - Êï¥Êï∞
                ‚Ä¢ Double - ÂèåÁ≤æÂ∫¶ÊµÆÁÇπÊï∞ÔºàÊé®ËçêÔºâ
                ‚Ä¢ Float - ÂçïÁ≤æÂ∫¶ÊµÆÁÇπÊï∞
                ‚Ä¢ String - Â≠óÁ¨¶‰∏≤
                ‚Ä¢ Bool - Â∏ÉÂ∞îÂÄºÔºàtrue/falseÔºâ
                ‚Ä¢ Character - Âçï‰∏™Â≠óÁ¨¶
                """
            )
            
            CodeExampleCard(
                title: "Á±ªÂûãÁ§∫‰æã",
                code: """
                let age: Int = 25
                let height: Double = 175.5
                let score: Float = 98.6
                let name: String = "SwiftÂ≠¶‰π†ËÄÖ"
                let isStudent: Bool = true
                let grade: Character = "A"
                
                // Á±ªÂûãÊé®Êñ≠ - SwiftËá™Âä®Êé®Êñ≠Á±ªÂûã
                let autoInt = 42        // Int
                let autoDouble = 3.14   // Double
                let autoString = "Hello" // String
                """
            )
            
            TipCard(
                title: "üéØ Â≠¶‰π†Ë¶ÅÁÇπ",
                content: """
                ‚Ä¢ Swift ‰ºöËá™Âä®Êé®Êñ≠ÂèòÈáèÁ±ªÂûã
                ‚Ä¢ Double ÊØî Float Á≤æÂ∫¶Êõ¥È´òÔºå‰ºòÂÖà‰ΩøÁî® Double
                ‚Ä¢ Á±ªÂûãÂÆâÂÖ®Ôºö‰∏çÂêåÁ±ªÂûã‰∏çËÉΩÁõ¥Êé•Ê∑∑ÂêàËøêÁÆó
                """
            )
        }
    }
}

// MARK: - Á±ªÂûãËΩ¨Êç¢Á´†ËäÇ  
struct TypeConversionSection: View {
    @State private var inputNumber = "42"
    @State private var convertedValue = 0
    
    var body: some View {
        VStack(alignment: .leading, spacing: 16) {
            ConceptCard(
                title: "üîÑ Á±ªÂûãËΩ¨Êç¢",
                content: """
                Swift ‰∏çÊîØÊåÅÈöêÂºèÁ±ªÂûãËΩ¨Êç¢ÔºåÂøÖÈ°ªÊòæÂºèËΩ¨Êç¢Ôºö
                
                ‚Ä¢ Int(value) - ËΩ¨Êç¢‰∏∫Êï¥Êï∞
                ‚Ä¢ Double(value) - ËΩ¨Êç¢‰∏∫ÂèåÁ≤æÂ∫¶
                ‚Ä¢ String(value) - ËΩ¨Êç¢‰∏∫Â≠óÁ¨¶‰∏≤
                """
            )
            
            CodeExampleCard(
                title: "ËΩ¨Êç¢Á§∫‰æã",
                code: """
                let intValue = 10
                let doubleValue = 3.14
                
                // ÂøÖÈ°ªÊòæÂºèËΩ¨Êç¢
                let sum = Double(intValue) + doubleValue
                
                // Â≠óÁ¨¶‰∏≤ËΩ¨Êï∞Â≠óÔºàÂèØËÉΩÂ§±Ë¥•Ôºâ
                let numberString = "123"
                if let number = Int(numberString) {
                    print("ËΩ¨Êç¢ÊàêÂäüÔºö\\(number)")
                }
                """
            )
            
            // ‰∫§‰∫íÂºèËΩ¨Êç¢Âô®
            InteractiveConverterCard()
        }
    }
}

// MARK: - Â≠óÁ¨¶‰∏≤ÊèíÂÄºÁ´†ËäÇ
struct StringInterpolationSection: View {
    @State private var userName = "SwiftÂ≠¶‰π†ËÄÖ"
    @State private var userAge = 20
    
    var body: some View {
        VStack(alignment: .leading, spacing: 16) {
            ConceptCard(
                title: "üí¨ Â≠óÁ¨¶‰∏≤ÊèíÂÄº",
                content: """
                ‰ΩøÁî® \\() ËØ≠Ê≥ïÂú®Â≠óÁ¨¶‰∏≤‰∏≠ÊèíÂÖ•ÂèòÈáèÔºö
                
                ‚Ä¢ ÁÆÄÊ¥ÅÊòìËØª
                ‚Ä¢ ÊîØÊåÅË°®ËææÂºè
                ‚Ä¢ Ëá™Âä®Á±ªÂûãËΩ¨Êç¢
                """
            )
            
            CodeExampleCard(
                title: "ÊèíÂÄºÁ§∫‰æã",
                code: """
                let name = "Â∞èÊòé"
                let age = 20
                let score = 95.5
                
                let info = "ÊàëÊòØ\\(name)Ôºå‰ªäÂπ¥\\(age)Â≤ÅÔºåÂàÜÊï∞\\(score)"
                let calculation = "2 + 3 = \\(2 + 3)"
                """
            )
            
            // ‰∫§‰∫íÂºèÂ≠óÁ¨¶‰∏≤ÊèíÂÄº
            InteractiveStringCard(name: $userName, age: $userAge)
        }
    }
}

// MARK: - ÂÆûË∑µÁªÉ‰π†Á´†ËäÇ
struct PracticeSection: View {
    var body: some View {
        VStack(alignment: .leading, spacing: 16) {
            ConceptCard(
                title: "üéØ ÁªºÂêàÁªÉ‰π†",
                content: "Áé∞Âú®ËÆ©Êàë‰ª¨ÊääÂ≠¶Âà∞ÁöÑÁü•ËØÜÂ∫îÁî®Âà∞ÂÆûÈôÖÈ°πÁõÆ‰∏≠ÔºÅ"
            )
            
            // BMIËÆ°ÁÆóÂô®
            BMICalculatorCard()
            
            // ‰∏™‰∫∫‰ø°ÊÅØÂç°Áâá
            PersonalInfoCard()
            
            // Ê∏©Â∫¶ËΩ¨Êç¢Âô®
            TemperatureConverterCard()
            
            TipCard(
                title: "üèÜ ÊÅ≠ÂñúÔºÅ",
                content: """
                ‰Ω†Â∑≤ÁªèÂÆåÊàê‰∫Ü Swift Âü∫Á°ÄËØ≠Ê≥ïÁöÑÂ≠¶‰π†ÔºÅ
                
                ‰ªäÂ§©Â≠¶Âà∞ÁöÑÂÜÖÂÆπÔºö
                ‚Ä¢ ÂèòÈáèÂíåÂ∏∏ÈáèÁöÑ‰ΩøÁî®
                ‚Ä¢ Swift Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûã
                ‚Ä¢ Á±ªÂûãËΩ¨Êç¢ÊäÄÂ∑ß
                ‚Ä¢ Â≠óÁ¨¶‰∏≤ÊèíÂÄºËØ≠Ê≥ï
                ‚Ä¢ ÂÆûÈôÖÈ°πÁõÆÁªÉ‰π†
                """
            )
        }
    }
}

// MARK: - Âü∫Á°ÄÁªÑ‰ª∂Áé∞Âú®Âú® SharedComponents.swift ‰∏≠ÂÆö‰πâ

// MARK: - È¢ÑËßà
struct Day1LearningView_Previews: PreviewProvider {
    static var previews: some View {
        Day1LearningView()
    }
}